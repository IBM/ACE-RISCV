Definition type_of_core_result_Result_unwrap `{!typeGS Σ} (T_rt : Type) (T_st : syn_type) (U_rt : Type) (U_st : syn_type)  :=
  fn(∀ () : 0 | (T_ty, U_ty, x) : (type T_rt * type U_rt * _)%type, (λ ϝ, []); (inl (#x)) @ (core_result_Result_ty T_ty U_ty); (λ π : thread_id, ⌜T_st = ty_syn_type T_ty⌝ ∗ ⌜U_st = ty_syn_type U_ty⌝ ∗ ⌜ty_allows_reads T_ty⌝ ∗ ⌜ty_allows_reads U_ty⌝ ∗ ⌜ty_allows_writes T_ty⌝ ∗ ⌜ty_allows_writes U_ty⌝))
    → ∃ _ : unit, x @ T_ty; (λ π : thread_id, True).

(* NOTE: variance proofs are currently not automatically generated by the frontend *)
Lemma core_result_Result_ty_weak_subtype_Ok E L {T_rt1 T_rt2 U_rt} (T_ty1 : type T_rt1) (T_ty2 : type T_rt2) (U_ty1 : type U_rt) (U_ty2 : type U_rt) r1 r2 T :
  weak_subtype E L r1 r2 T_ty1 T_ty2 
    (mut_subtype E L U_ty1 U_ty2 T) ⊢
  weak_subtype E L (Ok (#r1)) (Ok (#r2)) (core_result_Result_ty T_ty1 U_ty1) (core_result_Result_ty T_ty2 U_ty2) T.
Proof.
Admitted.
Global Instance core_result_Result_ty_weak_subtype_Ok_inst E L {T_rt1 T_rt2 U_rt} (T_ty1 : type T_rt1) (T_ty2 : type T_rt2) (U_ty1 U_ty2 : type U_rt) r1 r2 :
Subtype E L (Ok (#r1)) (Ok (#r2)) (core_result_Result_ty T_ty1 U_ty1) (core_result_Result_ty T_ty2 U_ty2) := λ T, i2p (core_result_Result_ty_weak_subtype_Ok E L T_ty1 T_ty2 U_ty1 U_ty2 r1 r2 T).

Lemma core_result_Result_ty_weak_subtype_Err E L {T_rt U_rt1 U_rt2} (T_ty1 T_ty2 : type T_rt) (U_ty1 : type U_rt1) (U_ty2 : type U_rt2) r1 r2 T :
  mut_subtype E L T_ty1 T_ty2 (weak_subtype E L r1 r2 U_ty1 U_ty2 T) ⊢
  weak_subtype E L (Err (#r1)) (Err (#r2)) (core_result_Result_ty T_ty1 U_ty1) (core_result_Result_ty T_ty2 U_ty2) T.
Proof.
Admitted.
Global Instance core_result_Result_ty_weak_subtype_Err_inst E L {T_rt U_rt1 U_rt2} (T_ty1 T_ty2 : type T_rt) (U_ty1 : type U_rt1) (U_ty2 : type U_rt2) r1 r2 :
Subtype E L (Err (#r1)) (Err (#r2)) (core_result_Result_ty T_ty1 U_ty1) (core_result_Result_ty T_ty2 U_ty2) := λ T, i2p (core_result_Result_ty_weak_subtype_Err E L T_ty1 T_ty2 U_ty1 U_ty2 r1 r2 T).
